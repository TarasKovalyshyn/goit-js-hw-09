{"mappings":"YACA,IAAuBA,EAAUC,EACzBC,GADeF,EAUT,EAVmBC,EAUhB,KATTC,EAAgBC,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFM,YAAW,W,OAAMF,EAAQ,CAACN,WAAUC,S,GAASA,GAE7CO,YAAW,W,OAAMD,EAAO,CAACP,WAAUC,S,GAASA,E,KAK/CQ,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MACjBU,QAAQC,IAAI,uBAAwCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,IAE3Da,OAAM,SAAAJ,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAClBU,QAAQC,IAAI,sBAAqCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      setTimeout(() => resolve({position, delay}), delay)\n    } else { \n      setTimeout(() => reject({position, delay}), delay)\n    }\n  });\n}\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });"],"names":["position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.9f3ae16f.js.map"}